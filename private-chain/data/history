eth.blockNumbers
eth.blockNumber
eth.accounts
eth.getBalance('0xba48bd5cfde8c852fb738cb4ceb3556a7b9c648c')
miner.start(1)
eth.blockNumber
eth.getBalance('0xba48bd5cfde8c852fb738cb4ceb3556a7b9c648c')
var tokenContract = web3.eth.contract([{"constant":false,"inputs":[{"name":"account","type":"address"},{"name":"amount","type":"uint256"}],"name":"issue","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"},{"name":"amount","type":"uint256"}],"name":"transfer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"account","type":"address"}],"name":"getBalance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"account","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Issue","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Transfer","type":"event"}]);
var token = tokenContract.new(   
   {
     from: web3.eth.accounts[0], 
     data: '0x6060604052341561000f57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103d98061005e6000396000f300606060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063867904b41461005c578063a9059cbb1461009e578063f8b2cb4f146100e0575b600080fd5b341561006757600080fd5b61009c600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061012d565b005b34156100a957600080fd5b6100de600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506101da565b005b34156100eb57600080fd5b610117600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610364565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415151561018957600080fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151561022757600080fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef338383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050565b6000600160008373ffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509190505600a165627a7a72305820756741e0bc53bf19a6c1061786312f476d7ee27ff19ac24726d23048a0790e6d0029', 
     gas: '4700000'
   }, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
var token = tokenContract.new(   
   {
     from: web3.eth.accounts[0], 
     data: '0x6060604052341561000f57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103d98061005e6000396000f300606060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063867904b41461005c578063a9059cbb1461009e578063f8b2cb4f146100e0575b600080fd5b341561006757600080fd5b61009c600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061012d565b005b34156100a957600080fd5b6100de600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506101da565b005b34156100eb57600080fd5b610117600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610364565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415151561018957600080fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151561022757600080fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef338383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509190505600a165627a7a72305820756741e0bc53bf19a6c1061786312f476d7ee27ff19ac24726d23048a0790e6d0029', 
     gas: '4700000'
   }, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
eth.accounts
token.issue.sendTransaction(eth.accounts[0], 100, {from: eth.accounts[0]});
account2 = '0x23dae1016ac6972a3c561e7f8926fab8efea7039'
account2
eth.getBalance(account2)
token
token.transfer(account2, 1, {from: eth.accounts[0]}
)
eth.getBalance(account2)
token.getBalance()
token.getBalance
token.issue.sendTransaction(eth.accounts[0], 100, {from: eth.accounts[0]});
token.getBalance(eth.accounts[0])
token.getBalance(eth.accounts[1])
token.issue.sendTransaction(eth.accounts[3], 100, {from: eth.accounts[3]});
token.issue.sendTransaction(eth.accounts[3], 100, {from: eth.accounts[0]});
token.issue.sendTransaction(eth.accounts[3], 1, {from: eth.accounts[0]});
token.transfer(eth.accounts[3], 1, {from: eth.accounts[0]})
token.getBalance(eth.accounts[1])
token.transfer(account2, 1, {from: eth.accounts[0]}
)
token.transfer(account2, 1, {from: eth.accounts[0]})
token.transfer(account2, 1, {from: eth.accounts[0]}
)
token.transfer(account2, 1, {from: eth.accounts[0]})
token.transfer(eth.accounts[3], 0.5, {from: eth.accounts[2]})
eth.accounts
token.issue.sendTransaction(eth.accounts[1], 2, {from: eth.accounts[0]})
token.getBalance(eth.accounts[1])
token.issue.sendTransaction(eth.accounts[1], 2, {from: eth.accounts[1]})
token.issue.sendTransaction(eth.accounts[1], 0.1, {from: eth.accounts[1]})
token.issue.sendTransaction(eth.accounts[1], 0.1, {from: eth.accounts[0]})
token.getBalance(eth.accounts[1])
token.getBalance(eth.accounts[0])
token.getBalance(eth.accounts[2])
token.getBalance(eth.accounts[0])
token.getBalance(eth.accounts[1])
txpool.status
miner.stop()
token.getBalance(eth.accounts[1])
txpool.status
token.issue.sendTransaction(eth.accounts[1], 0.1, {from: eth.accounts[0]})
txpool.satus
txpool.status
eth.getTransaction('0x357875b15ec54668838e14a9c85d1d54b9c387516a57227cd7dcbb6490b06e14')
eth.accounts[0]
miner.start()
miner.stop()
txpool.status
eth.getTransaction('0x357875b15ec54668838e14a9c85d1d54b9c387516a57227cd7dcbb6490b06e14')
admin.perrs
admin.peers
eth.accounts
token
var tokenContract = web3.eth.contract([{"constant":false,"inputs":[{"name":"account","type":"address"},{"name":"amount","type":"uint256"}],"name":"issue","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"},{"name":"amount","type":"uint256"}],"name":"transfer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"account","type":"address"}],"name":"getBalance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"account","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Issue","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Transfer","type":"event"}]);
eth.getBalance(eth.accounts[0])
var token = tokenContract.new(   
   {
     from: web3.eth.accounts[0], 
     data: '0x6060604052341561000f57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103d98061005e6000396000f300606060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063867904b41461005c578063a9059cbb1461009e578063f8b2cb4f146100e0575b600080fd5b341561006757600080fd5b61009c600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061012d565b005b34156100a957600080fd5b6100de600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506101da565b005b34156100eb57600080fd5b610117600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610364565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415151561018957600080fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151561022757600080fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef338383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509190505600a165627a7a72305820756741e0bc53bf19a6c1061786312f476d7ee27ff19ac24726d23048a0790e6d0029', 
     gas: '4700000'
   }, function (e, contract){
    console.log(e, contract);
    if (typeof contract.address !== 'undefined') {
         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
    }
 })
miner.start()
miner.stop()
token.getBalance(eth.accounts[0])
token.getBalance(eth.accounts[1])
token.getBalance(eth.accounts[2])
user1= accounts[0]
user1= eth.accounts[0]
user2 = eth.accounts[1]
user3 = eth.accounts[2]
token.getBalance(user1)
token.getBalance(user2)
token.getBalance(user3)
token.issue.sendTransaction(user1, 100, {from: user1})
miner.start()
miner.stop()
token.getBalance(user1)
miner.start()
miner.stop()
token.getBalance(user1)
token.getBalance(user2)
miner.start(1)
miner.stop()
txpool.status
token.issue.sendTransaction(user1, 100, {from: user1})
txpool.status
miner.start(1)
miner.stop()
txpool.status
token.issue.sendTransaction(user1, 100, {from: user1})
miner.start(1)
miner.stop()
txpool.status
miner.start(1)
miner.stop()
txpool.status
token.getBalance(user)
token.getBalance(user1)
token.getBalance(user2)
token.getBalance(user3)
token.issue.sendTransaction(user2, 100, {from: user1})
miner.start()
token.getBalance(user1)
token.getBalance(user2)
token.getBalance(user3)
token.getBalance(user2)
token.getBalance(user3)
token.getBalance(user1)
token.issuer
token.issue.sendTransaction(user2, 100, {from: user1})
user1
eth.sendTransaction({from:eth.accounts[0],to:eth.accounts[1],value:1})
token.getBalance(user1)
token.getBalance(user2)
token.getBalance(user3)
eth.getBalance(user2)
eth.getBalance(user1)
eth.getBalance(user3)